🔹 기본 실습 1: 리스트 활용 (추가, 삭제, 수정, 조회, 검색)
문제:
리스트를 활용하여 다음 기능을 수행하는 프로그램을 작성하세요.

사용자가 입력한 값을 리스트에 추가
특정 인덱스의 값을 변경
리스트에서 특정 값을 삭제
리스트의 모든 요소 조회
특정 값이 리스트에 있는지 검색

단순 기능 구현만 보이기

예시)
# 1. 추가
my_list.append("사과")
my_list.append("바나나")
my_list.append("체리")

# 2. 수정 (첫 번째 요소 변경)
my_list[0] = "오렌지"

# 3. 삭제 (바나나 삭제)
my_list.remove("바나나")

# 4. 조회 (전체 출력)
print("현재 리스트:", my_list)

# 5. 검색 (체리가 있는지 확인)
search_item = "체리"
if search_item in my_list:
print(f"'{search_item}'가 리스트에 존재합니다.")
else:
print(f"'{search_item}'가 리스트에 없습니다.")

🔹 기본 실습 2: 튜플 활용 (조회, 검색)
문제:
튜플을 활용하여 다음 기능을 수행하는 프로그램을 작성하세요.

주어진 튜플에서 특정 인덱스의 값을 조회
특정 값이 튜플에 있는지 검색

단순 기능 구현만 보이기

🔹 기본 실습 3: 셋 활용 (추가, 삭제, 조회, 검색)
문제:
셋을 활용하여 다음 기능을 수행하는 프로그램을 작성하세요.

사용자가 입력한 값을 셋에 추가
특정 값을 삭제
셋의 모든 요소 조회
특정 값이 셋에 있는지 검색

단순 기능 구현만 보이기


🔹 응용 실습 1: 학생 목록 관리 (리스트 활용)
문제:
학생 이름을 저장하는 리스트를 활용하여 다음 기능을 구현하세요.

학생 추가
학생 삭제
학생 목록 출력
특정 학생이 목록에 있는지 검색

단순 기능 구현만 보이기


🔹 응용 실습 2: 상품 재고 관리 (딕셔너리 활용)
문제:
딕셔너리를 활용하여 상품 재고를 관리하는 프로그램을 작성하세요.

새로운 상품 추가
특정 상품의 재고 변경
특정 상품 삭제
전체 상품 목록 조회
특정 상품 검색

단순 기능 구현만 보이기

🔹 응용 실습 3: 유일한 값 추출기 (셋 활용)
문제:
리스트에서 중복된 값을 제거하고, 유일한 값들만 저장하는 프로그램을 작성하세요.

단순 기능 구현만 보이기