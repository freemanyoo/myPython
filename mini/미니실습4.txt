### \#\# NumPy 미니 실습 문제 📝

**문제 1: 배열 생성 및 변형**
1부터 25까지의 숫자를 포함하는 1차원 배열을 만든 후, 이 배열을 5x5 크기의 2차원 배열로 변형하세요.

-----

**문제 2: 배열 슬라이싱**
위 1번 문제에서 생성한 5x5 배열에서, 아래 그림과 같이 안쪽에 위치한 3x3 배열(값 7부터 19까지)을 슬라이싱하여 추출하세요.

-----

**문제 3: 브로드캐스팅 활용 연산**
2x3 크기의 배열 `A = np.array([[5, 10, 15], [20, 25, 30]])`가 있습니다. 이 배열의 첫 번째 행에는 100을, 두 번째 행에는 200을 더하세요. 브로드캐스팅을 활용하여 한 줄의 코드로 해결해 보세요.
(힌트: `[[100], [200]]` 형태의 배열을 더해야 합니다.)

-----

**문제 4: 불리언 인덱싱 (필터링)**
0부터 15까지의 숫자를 가진 4x4 배열을 만드세요. 이 배열에서 3의 배수만 모두 추출하여 1차원 배열로 만드세요.

-----

**문제 5: 통계 연산 (축 기준)**
다음은 4일간 3개 상점의 일일 매출 데이터입니다.
`sales = np.array([[50, 60, 55], [80, 95, 75], [40, 100, 90], [70, 85, 80]])`
각 상점별(열 기준) 평균 매출과 각 날짜별(행 기준) 총매출을 각각 계산하세요.

-----

**문제 6: `np.where` 활용**
1부터 10까지의 숫자를 가진 배열에서, 5보다 큰 숫자는 제곱하고, 5보다 작거나 같은 숫자는 0으로 바꾸는 새로운 배열을 생성하세요.

-----

**문제 7: `argmax` 활용**
어떤 선수의 주간 득점 기록이 `scores = np.array([12, 25, 8, 31, 19, 22, 15])`와 같습니다. 이 선수가 가장 높은 득점을 기록한 것은 몇 번째 주(week)인지 찾아내세요. (인덱스는 0부터 시작)

-----

**문제 8: 배열 합치기**
`a = np.array([[1, 2], [3, 4]])`와 `b = np.array([[5, 6]])`가 있습니다. `b`를 `a`의 아래에 수직으로 붙여서 3x2 배열을 만드세요.

-----

**문제 9: 결측치(NaN) 처리**
다음 배열에서 결측치(`np.nan`)의 개수를 세고, 결측치를 해당 배열의 전체 평균값(결측치를 제외한)으로 대체하세요.
`data = np.array([10., 20., np.nan, 30., 40., np.nan, 50.])`

-----

**문제 10: 종합 응용**
10x2 크기의 배열에 0부터 99까지의 정수를 무작위로 채우세요. 이 배열은 (x, y) 좌표 목록으로 간주합니다. 이 중에서 x값(0번 열)이 y값(1번 열)보다 큰 모든 좌표(행)를 찾아 출력하세요.